apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def globalConfiguration = rootProject.extensions.getByName("ext")
def keystorePropertiesFile = rootProject.file("./buildsystem/keystore/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        applicationId "com.vodolazskiy.twitterclient"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk

        def versionMajor = 1
        def versionMinor = 0
        def versionPatch = 0
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        versionCode 1
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        resValue "string", "twitter_key", globalConfiguration['twitterKey']
        resValue "string", "twitter_secret", globalConfiguration['twitterSecret']
    }
    sourceSets {
        main {
            res.srcDirs =
                    [
                            'src/main/res'
                    ]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        encoding "UTF-8"
    }
    kotlin { experimental { coroutines 'enable' } }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'protobuf.meta'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    signingConfigs {
        debug {
            storeFile file("../buildsystem/keystore/twitter_debug.keystore")
            storePassword keystoreProperties['debugStorePassword']
            keyAlias keystoreProperties['debugKeyAlias']
            keyPassword keystoreProperties['debugKeyPassword']
        }
        release {
            //todo change keystore
            storeFile file("../buildsystem/keystore/twitter_debug.keystore")
            storePassword keystoreProperties['releaseStorePassword']
            keyAlias keystoreProperties['releaseKeyAlias']
            keyPassword keystoreProperties['releaseKeyPassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        println("Iterating variant: " + variant.getName())
        switch (variant.getName()) {
            case 'release':
                variant.buildConfigField "String", "DB_NAME", "\"${globalConfiguration['databaseNameRelease']}\""
                break
            case 'debug':
                variant.buildConfigField "String", "DB_NAME", "\"${globalConfiguration['databaseNameDev']}\""
                break
        }
    }
}

dependencies {
    //todo review it
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //support
    implementation deps.support.appcompat
    implementation deps.support.annotations
    implementation deps.support.recyclerview
    implementation deps.support.constraint
    implementation deps.support.design

    //kotlin
    implementation deps.kotlin.stdlib

    //rx
    implementation deps.rx.android
    implementation deps.rx.java

    //dagger
    implementation deps.dagger.lib
    kapt deps.dagger.processor
    implementation deps.dagger.android
    kapt deps.dagger.androidProcessor
    implementation deps.dagger.support

    //database
    implementation deps.database.roomRuntime
    implementation deps.database.roomRxAdapter
    kapt deps.database.roomAnnotationProcessor

    //glide
//    implementation deps.glide.glide
//    kapt deps.glide.glideAnnotation
//    implementation deps.glide.glideTransformers
//    implementation deps.glide.glideOkHttp
//    kapt deps.glide.glideCompiler

    //twitter
    implementation deps.twitter.core

    //mosby
    implementation deps.mosby.core
    implementation deps.mosby.queuing
}
